apiVersion: v1
kind: Template
metadata:
  name: anomaly-detection-template
  annotations:
    discription: "Anomaly Detection descripton"

objects:





- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: anomaly-detection-model-storage
  spec:
    storageClassName: dynamic-nfs
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    



- kind: ImageStream
  apiVersion: image.openshift.io/v1
  metadata:
    name: anomaly-detection
    labels:
      build: anomaly-detection
      app:  anomaly-detection
    
  spec:
    lookupPolicy:
      local: true


- kind: BuildConfig
  apiVersion: build.openshift.io/v1
  
  metadata:
    labels:
      app: anomaly-detection
      build: anomaly-detection
    name: anomaly-detection
  spec:
    triggers:
      - generic:
          secret: abef1035f7e8528b
        type: Generic
      - github:
          secret: 104e14d978977712
        type: GitHub
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange

    source:
      git:
        ref: master
        uri: 'git@gitlab.cee.redhat.com:mcliffor/AO_AD_POC.git'
      sourceSecret:
        name: repo-at-gitlab
      type: Git
    
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: 'python:3.6'
          namespace: openshift
      type: Source
    
    output:
      to:
        kind: ImageStreamTag
        name: 'anomaly-detection:latest'
    
    
    
- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  
  metadata:
    labels:
      app: anomaly-detection
    name: anomaly-detection
  spec:
    replicas: 1
    selector:
      deploymentconfig: anomaly-detection
    template:
      metadata:
        labels:
          app: anomaly-detection
          deploymentconfig: anomaly-detection
      spec:
        volumes: 
          - persistentVolumeClaim:
              claimName: anomaly-detection-model-storage
            name: pvol
        containers:
          - env:
            - name: LADT_ELASTICSEARCH_ENDPOINT
              value: ${LADT_ELASTICSEARCH_ENDPOINT}
            - name: LADT_MODEL
              value: ${LADT_MODEL}
            - name: LADT_INDEX
              value: ${LADT_INDEX}
            - name: LADT_TIME_SPAN
              value: ${LADT_TIME_SPAN}
            - name: LADT_MAX_ENTRIES
              value: ${LADT_MAX_ENTRIES}
            - name: LADT_ITERS
              value: ${LADT_ITERS}
            - name: LADT_SERVICE
              value: ${LADT_SERVICE}
            - name: LADI_ELASTICSEARCH_ENDPOINT
              value: ${LADI_ELASTICSEARCH_ENDPOINT}
            - name: LADI_MODEL
              value: ${LADI_MODEL}
            - name: LADI_INDEX
              value: ${LADI_INDEX}
            - name: LADI_OUTDEX
              value: ${LADI_OUTDEX}
            - name: LADI_TIME_SPAN
              value: ${LADI_TIME_SPAN}
            - name: LADI_MAX_ENTRIES
              value: ${LADI_MAX_ENTRIES}
            - name: LADI_SERVICE
              value: ${LADI_SERVICE}
            - name: LADI_THRESHOLD
              value: ${LADI_THRESHOLD}
            - name: LADI_MAX_ANOMALIES
              value: ${LADI_MAX_ANOMALIES}
            image: anomaly-detection:latest
            imagePullPolicy: Always
            name: anomaly-detection
            
            volumeMounts: 
              - mountPath: "/var/www/html"
                name: pvol
            
            resources:
              limits:
                memory: 2Gi
                cpu: 2
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
          - anomaly-detection
          from:
            kind: "ImageStreamTag"
            name: "anomaly-detection:latest"

parameters:
  - name: LADT_ELASTICSEARCH_ENDPOINT
    descripton: "Elasticsearch endpoint to pull log data from for training"
    value: "http://elasticsearch.perf.lab.eng.bos.redhat.com:9280"
  - name: LADT_MODEL
    descripton: "Name of model to train"
    value: map.sav
  - name: LADT_INDEX
    descripton: "Name of Elasticsearch index to pull log data from for training"
    value: logstash-
  - name: LADT_TIME_SPAN
    descripton: "Timespan for training set in seconds"
    value: "900"
  - name: LADT_MAX_ENTRIES
    descripton: "Maximum number of logs to be pulled for training"
    value: "4500" 
  - name: LADT_ITERS
    descripton: "Number of iterations of SOM training"  
    value: "45000"
  - name: LADT_SERVICE
    descripton: "Name of the Elasticsearch service to monitor"  
    value: journal

  - name: LADI_ELASTICSEARCH_ENDPOINT
    descripton: "Elasticsearch endpoint to pull log data from for Anomaly Detection"
    value: http://elasticsearch.perf.lab.eng.bos.redhat.com:9280
  - name: LADI_MODEL
    descripton: "Name of the model to be loaded"
    value: map.sav
  - name: LADI_INDEX
    descripton: "Name of Elasticsearch index to pull log data from for anomlay detection"  
    value: logstash-
  - name: LADI_OUTDEX
    descripton: "Name of Elasticsearch index to push anomlay detection results to"  
    value: mcliffor_test_ingest
  - name: LADI_TIME_SPAN
    descripton: "Timespan for inference loop in seconds"  
    value: "60"
  - name: LADI_MAX_ENTRIES
    descripton: "Maximum number of logs to be pulled on each inference loop"  
    value: "1000"
  - name: LADI_SERVICE
    descripton: "Name of the Elasticsearch service to monitor"  
    value: journal
  - name: LADI_THRESHOLD
    descripton: "Real-Valued number to modify anomaly detection threshold "  
    value: "0.99"
  - name: LADI_MAX_ANOMALIES
    descripton: "Maximum number of anomalies to be flagged per inference loop"  
    value: "5"