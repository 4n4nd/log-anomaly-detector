apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: log-anomaly-detector-factstore
objects:
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        app: log-anomaly-detector-factstore-${APP_NAME}
      name: log-anomaly-detector-factstore
    spec:
      lookupPolicy:
        local: true
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      labels:
        app: log-anomaly-detector-factstore
      name: anomaly-detector-factstore
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: log-anomaly-detector-factstore:latest
      source:
        git:
          ref: master
          uri: https://github.com/AICoE/log-anomaly-detector.git
        type: Git
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: python:3.6
            namespace: openshift
        type: Source
      triggers:
        - imageChange: {}
          type: ImageChange
        - type: ConfigChange
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: log-anomaly-detector-factstore-${APP_NAME}
      name: log-anomaly-detector-factstore-${APP_NAME}
    spec:
      replicas: 1
      selector:
        deploymentconfig: log-anomaly-detector-factstore-${APP_NAME}
      template:
        metadata:
          labels:
            app: log-anomaly-detector-factstore-${APP_NAME}
            deploymentconfig: log-anomaly-detector-factstore-${APP_NAME}
        spec:
          containers:
            - args:
                - app.py
                - ui
              command:
                - python
              image: log-anomaly-detector-factstore:latest
              imagePullPolicy: Always
              name: log-anomaly-detector-factstore
              env:
                - name: SQL_CONNECT
                  value: ${SQL_CONNECT}
                - name: APP_NAME
                  value: ${APP_NAME}
              resources:
                limits:
                  cpu: 2
                  memory: 1Gi
                requests:
                  cpu: 500m
                  memory: 500Mi
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - log-anomaly-detector-factstore
            from:
              kind: ImageStreamTag
              name: log-anomaly-detector-factstore:latest
          type: ImageChange
  - apiVersion: v1
    kind: Service
    metadata:
      name: log-anomaly-detector-${APP_NAME}-svc
      labels:
        app: log-anomaly-detector-factstore-${APP_NAME}
    spec:
      selector:
        app: log-anomaly-detector-${APP_NAME}
      ports:
        - protocol: TCP
          name: metrics
          port: 5001
          targetPort: 5001
parameters:
  - name: SQL_CONNECT
    value: mysql+pymysql://admin:admin@mysql-56-centos7/factstore
  - name: APP_NAME
    value: "placeholder"
