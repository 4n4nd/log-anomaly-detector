apiVersion: v1
kind: Template
metadata:
  name: log-anomaly-detector
  annotations:
    discription: "Anomaly Detection descripton"
objects:
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: log-anomaly-detector
    labels:
      app: log-anomaly-detector
  spec:
    storageClassName: ${STORAGE_CLASS}
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
- kind: ImageStream
  apiVersion: image.openshift.io/v1
  metadata:
    name: log-anomaly-detector
    labels:
      app: log-anomaly-detector
  spec:
    lookupPolicy:
      local: true
- kind: BuildConfig
  apiVersion: build.openshift.io/v1
  metadata:
    labels:
      app: log-anomaly-detector
    name: log-anomaly-detector
  spec:
    triggers:
      - generic:
          secret: abef1035f7e8528b
        type: Generic
      - github:
          secret: 104e14d978977712
        type: GitHub
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange
    source:
      git:
        ref: feature/storage
        uri: 'git@gitlab.cee.redhat.com:vpavlin/AO_AD_POC.git'
      sourceSecret:
        name: ${GIT_SECRET_NAME}
      type: Git    
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: 'python:3.6'
          namespace: openshift
      type: Source
    output:
      to:
        kind: ImageStreamTag
        name: 'log-anomaly-detector:latest'
- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    labels:
      app: log-anomaly-detector
    name: log-anomaly-detector
  spec:
    replicas: 1
    selector:
      deploymentconfig: log-anomaly-detector
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: log-anomaly-detector
          deploymentconfig: log-anomaly-detector
      spec:
        volumes: 
          - persistentVolumeClaim:
              claimName: log-anomaly-detector
            name: model-storage
        containers:
          - env:
            #Model storage
            - name: LAD_STORAGE_BACKEND
              value: "${STORAGE_BACKEND}"
            - name: LAD_MODEL_DIR
              value: "${MODEL_DIR}"
            - name: LAD_MODEL_FILE
              value: "${MODEL_FILE}"
            - name: LAD_W2V_MODEL_FILE
              value: "${W2V_MODEL_FILE}"
          #Training
            - name: LAD_TRAIN_TIME_SPAN
              value: "${TRAIN_TIME_SPAN}"
            - name: LAD_TRAIN_MAX_ENTRIES
              value: "${TRAIN_MAX_ENTRIES}" 
            - name: LAD_TRAIN_ITERATIONS
              value: "${TRAIN_ITERATIONS}"
            - name: LAD_TRAIN_UPDATE_MODEL
              value: "${TRAIN_UPDATE_MODEL}"
          #Inference 
            - name: LAD_INFER_TIME_SPAN
              value: "${INFER_TIME_SPAN}"
            - name: LAD_INFER_MAX_ENTRIES
              value: "${INFER_MAX_ENTRIES}"
            - name: LAD_INFER_LOOPS
              value: "${INFER_LOOPS}"
            - name: LAD_INFER_ANOMALY_THRESHOLD
              value: "${INFER_ANOMALY_THRESHOLD}"
          #ES Storage Backend
            - name: LAD_ES_ENDPOINT
              value: "${ES_ENDPOINT}"
            - name: LAD_ES_INPUT_INDEX
              value: "${ES_INPUT_INDEX}"
            - name: LAD_ES_TARGET_INDEX
              value: "${ES_TARGET_INDEX}"
            - name: LAD_ES_SERVICE
              value: "${ES_SERVICE}"
            image: log-anomaly-detector:latest
            imagePullPolicy: Always
            name: log-anomaly-detector
            volumeMounts: 
              - mountPath: /opt/app-root/src/${MODEL_DIR}
                name: model-storage
            resources:
              limits:
                memory: 2Gi
                cpu: 2
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
          - log-anomaly-detector
          from:
            kind: "ImageStreamTag"
            name: "log-anomaly-detector:latest"

parameters:
#Model storage
  - name: STORAGE_BACKEND
    description: "Name of the storage backend to be used for loading training and inference data ('local' or 'es')"
    value: es
  - name: MODEL_DIR
    descripton: "Path to a directory where models will be saved"
    value: models
  - name: MODEL_FILE
    descripton: "Name of the file for stored SOM model"
    value: SOM.model
  - name: W2V_MODEL_FILE
    descripton: "Name of the file for stored word2vec model"
    value: W2V.model
#Training
  - name: TRAIN_TIME_SPAN
    descripton: "Timespan for training data set in seconds"
    value: "900"
  - name: TRAIN_MAX_ENTRIES
    descripton: "Maximum number of log entries in training data set"
    value: "45000" 
  - name: TRAIN_ITERATIONS
    descripton: "Number of iterations of SOM training"  
    value: "45000"
  - name: TRAIN_UPDATE_MODEL
    description: "True if updating existing model, False if starting new model"
    value: "True"
#Inference 
  - name: INFER_TIME_SPAN
    descripton: "Timespan for inference loop in seconds"  
    value: "60"
  - name: INFER_MAX_ENTRIES
    descripton: "Maximum number of logs to be pulled on each inference loop"  
    value: "3000"
  - name: INFER_LOOPS
    descripton: "Number of inference iterations between retraining the model"  
    value: "20"
  - name: INFER_ANOMALY_THRESHOLD
    descripton: "Threshold for marking a log entry an anomaly"  
    value: "3.1"
#ES Storage Backend
  - name: ES_ENDPOINT
    descripton: "Elasticsearch endpoint to pull log data from for training"
    value: "http://elasticsearch.perf.lab.eng.bos.redhat.com:9280"
  - name: ES_INPUT_INDEX
    descripton: "Name of Elasticsearch index to pull log data from for training and inference"
    value: logstash-
  - name: ES_TARGET_INDEX
    descripton: "Name of Elasticsearch index to push anomlay detection results to"  
    value: mcliffor_test_ingest-
  - name: ES_SERVICE
    descripton: "Name of the Elasticsearch service to monitor"  
    value: journal
#OpenShift
  - name: STORAGE_CLASS
    value: ceph-dyn-datahub-paas
  - name: GIT_SECRET_NAME
    value: repo-at-gitlab